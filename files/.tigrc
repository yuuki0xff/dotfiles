
########
# ALL views
########

bind generic g move-first-line
bind generic G move-last-line

# 選択したコミットをブラウザで開く
# github/bitbucketで動作確認。
bind generic o @bash -c 'xdg-open $(git remote get-url origin | awk \'/^https?:\\/\\// { sub("://.*@", "://"); } /^(https?|git):\\/\\// { sub("^(https?|git)://", "https://"); print $0; } /^[^/]+:[^/]{2}/ { sub(":", "/"); sub("^(.+@)?", "https://"); print $0 }\')/commits/%(commit)'


########
# main view
########

# チーム開発しているとよくremoteで更新が入るため手元に同期
#bind main ^r !git pull --rebase
# revert作業は手早く行う必要があるためバインドして効率化
bind main V !?git revert %(commit)
# 任意のリビジョンを再現するためにcheckoutすることが多いためバインド
bind main C !?git checkout %(commit)
# 軽量タグ、注釈付きタグをつける
bind main T !git tag %(prompt) %(commit)
bind main <Ctrl-T> !git -a tag %(prompt) %(commit)
bind main B !git rebase -i '%(commit)^'


########
# branch view
########

# リモートブランチをtrackしつつチェックアウト
bind refs T !git checkout -t %(ref)
# カーソル行のブランチを親にして入力した名前のブランチを作成
bind refs n !git checkout -b %(prompt) %(ref)
# 不要になったブランチを削除（squash mergeや別リポジトリへのmergeをするワークフロー用）
bind refs D !?git branch -D %(ref)
# 不要になったブランチを削除
bind refs d !?git branch -d %(ref)
# originへのpush
bind refs P !git push -u origin %(ref)


########
# Color
########

color default white black
color cursor default magenta
color date cyan default
color delimiter cyan default
color line-number yellow default
color diff-header yellow default
color diff-index blue default
color diff-chunk magenta default
color "Reported-by:" green default
color graph-commit cyan default

