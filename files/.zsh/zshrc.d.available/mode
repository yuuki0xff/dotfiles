
# ==== グローバル変数 ====
#
# __mode: 現在のモード。空なら標準モード
# __mode_history: 過去のモード。後ろに追加するスタック方式
# modepath: modesファイルが存在するディレクトリのパス
#
#
# ==== .mode ファイルにて定義される関数 ====
#
# .modeファイルにて定義される関数
# __mode_init: 読み込み時に呼ばれる。変数の初期化など
# __mode_unload: 独自に定義した関数や変数をunsetする

mode(){
	local help=0
	local list=0
	local change=

	for arg in "$@"; do
		case "$arg" in
			-h|--help)
				help=1
				;;
			-l|--list)
				list=1
				;;
			-*)
				echo "unknown option: $arg" >&2
				return 1
				;;
			*)
				change=$arg
				;;
		esac
	done

	# ヘルプを表示
	if (( $help )); then
		cat >&2 <<-EOS
		Usage: mode [--help] [--list] [modeName]
		EOS
		return
	fi

	# 選択可能なモードの一覧を表示
	if (( $list )); then
		find ${modepath[@]} -maxdepth 1 -type f -name "*.mode" -exec basename '{}' + | sed 's/\.mode$//' | sort -u
		return 0
	fi

	# 引数で与えられたモードへ移行する
	if [ "$change" ]; then
		if [ "$__mode" ]; then
			__mode_history+=( "$__mode" )
		fi
		__mode="$change"
		# 新しいモードファイルを読み込む
		local full_path
		full_path=$(find ${modepath[@]} -maxdepth 1 -type f -name "${change}.mode" -exec readlink -f '{}' +)
		source "$full_path"
		type __mode_init >/dev/null && __mode_init
		return
	fi
	# 引数なしなら標準のモードに移行する
	type __mode_unload >/dev/null && __mode_unload
	if [ "$__mode" ]; then
		__mode_history+=( "$__mode" )
	fi
	__mode=
	return
}

# vim: ft=zsh
